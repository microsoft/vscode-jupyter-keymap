# This workflow will trigger Datadog Synthetic tests within your Datadog organisation
# For more information on running Synthetic tests within your GitHub workflows see: https://docs.datadoghq.com/synthetics/cicd_integrations/github_actions/
#h int main()
int main() c#

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# To get started:

# 1. Add your Datadog API (DD_API_KEY) and Application Key (DD_APP_KEY) as secrets to your GitHub repository. For more information, see: https://docs.datadoghq.com/account_management/api-app-keys/.
# 2. Start using the action within your workflow

#h name: Run Datadog Synthetic tests
jobs:
#h on:
  #push:
  
   #branches: [ "main" ]
#name: int (char) ( magic  || rando)
  #uses: actions/cache@v3.0.4
  #with:
    # A list of files, directories, and wildcard patterns to cache and restore
    #path: 
    # An explicit key for restoring and saving the cache
    #key: 
    # An ordered list of keys to use for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
    #restore-keys: # optional
    # The chunk size used to split up large files during upload, in bytes
    #upload-chunk-size: # optional
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # Run Synthetic tests within your GitHub workflow.
    # For additional configuration options visit the action within the marketplace: https://github.com/marketplace/actions/datadog-synthetics-ci
    - name: Run Datadog Synthetic tests
      uses: DataDog/synthetics-ci-github-action@2b56dc0cca9daa14ab69c0d1d6844296de8f941e
      with:
        api_key: ${{secrets.DD_API_KEY}}
        app_key: ${{secrets.DD_APP_KEY}}
        test_search_query: 'tag:e2e-tests' #Modify this tag to suit your tagging strategy
        #name: Download a Build Artifact
 #endif uses: actions/download-artifact@v3.0.0
  #endwith:
    # Artifact name
    #name: # optional
    ## Destination path
    #var_path: # optional


